<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pauseBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>